print"/******************************/";
print"/* tests de la syntaxe de base */";
print"/******************************/";
print"";
print"-3+10<=7;";
-3+10 <= 7;
print"";
print"let a = 4;";
let a = 4;
print"a;";
a;
print"";
print"let acc = fun x -> x+1;";
let acc = fun x -> x+1;
print"let square = fun x -> x*x;";
let square = fun x -> x*x;
print"";
print"acc a;";
acc a;
print"";
print"square a;";
square a;
print"";
print"let b = 5;";
let b = 5;
print"";
print"acc a + b * 3;";
acc a + b * 3;
print"";
print"acc a + acc b * 2;";
acc a + acc b * 2;
print"";
print"let sq = fun x y -> square (x+y);";
let sq = fun x y -> square (x+y);
print"sq a b";
sq a b;
print"";
print"if acc b > 2 then square + 2 a else square b - 1;";
if acc b > 2 then square a + 2 else square b - 1;
print"";
print"if if a==1 then 0 else 1 then a else -a;";
if if a==1 then 0 else 1 then a else -a;
print"";
print"(if acc a > 2 then square a + 2 else square a - 1) + 5 * (if acc b > 0 || acc a >0 then -1 else 1);";
(if acc a > 2 then square a + 2 else square a - 1) + 5 * (if acc b > 0 || acc a >0 then -1 else 1);
print"";
print"if acc a > 2 && square b *5 > 200/7 then square a + 2 else square a -1;";
if acc a > 2 && square b *5 > 200/7 then square a + 2 else square a -1;
print"";
print"(fun z -> (if acc a > 2 || if square b > 24 then acc a -1 <0 else square a > acc a ";
       	print"  then fun a b -> a*a + 5*b -z ";
    	print"  else fun a b -> a*b-b +z) 3 4) 7;";
(fun z -> (if acc a > 2 || if square b > 24 then acc a -1 <0 else square a > acc a 
       	  then fun a b -> a*a + 5*b -z
    	  else fun a b -> a*b-b +z) 3 4) 7;
print"";
print"/***  test fonction rÃ©cursive ***/";
print"let div_rec = fun p n acu -> if p<n then acu else (div_rec (p-n) n (acu+1));";
print"let div = fun p n -> (div_rec p n 0);";
print"(div 12 3);";
let div_rec = fun p n acu -> if p<n then acu else (div_rec (p-n) n (acu+1));
let div = fun p n -> (div_rec p n 0);
(div 12 3);
print"";
print"/*** test factorielle ***/";
print"let fac = fun n -> if n<=0 then 1 else  n * (fac (n-1)) ;";
print"(fac  2);";
let fac = fun n -> if n<=0 then 1 else  n * (fac (n-1)) ;
fac 2;
print"";
print"/*** fonction avec plusieurs arguments ***/";
print"let f = fun x y -> x+y;";
print"f 5 6;";
let f = fun x y -> x+y;
f 5 6;
print"";
print"/****************************/";
print"/* tests sur LET IN et WHERE */";
print"/****************************/";
print"";
print"square x + x where x=3;";
square x + x where x=3;
print"";
print"let x = 5 in x < 10;";
let x = 5 in x < 10;

print"";
print"/************************/";
print"/* tests sur les listes */";
print"/************************/";
print""; 
print"let l = [0,1,2];";
let l = [0,1,2];
print"";
print"hd l;";
hd l;
print"";
print"hd tl l;";
hd tl l;
print"";
print"hd tl tl l;";
hd tl tl l;
print"";

print"";
print"/************************/";
print"/* tests sur les objets */";
print"/************************/";
print"";

let pa = {10,20};
let pb = {40,50};
let pc = {60,70};
let pd = pa--pb--pc;

translate(pd,{10,20});



let ba = {20,20};
let bb = {20,100};
let bc = {200,100};
let bd = {200,20};
let bg = rotation(Bezier(ba,bb,bc,bd),bc,190);





let ca = {75,50};
let cc = Cercle(ca,50);

let a = translate(cc,{0,20});
let b = translate(cc,{0,40});
let c = translate(cc,{0,60});
let d = translate(cc,{0,80});
let e = translate(cc,{0,100});

Draw([a,b,c,d,e,pd,bg,cc]);







