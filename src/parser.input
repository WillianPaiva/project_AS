print"#######################################################################################";

print"testing divisin with recursion";

let div_rec = fun p n acc -> if p<n then acc else (div_rec (p-n) n (acc+1));
let div = fun p n -> (div_rec p n 0);
(div 12 3);
print"#######################################################################################";

print"test factorial";

let fac = fun n -> if n<=0 then 1 else  n * (fac (n-1)) ;
(fac  2);

print"#######################################################################################";

print"test function with many argumants and the aplication with many arguments";

let f = fun x y -> x+y;


(f 5 6);
print"#######################################################################################";


let l = {1,2};
let f = {100,100};
let g = {50,100};
Draw(l--f);
let fig = translation(l--f,g);
Draw(figfig);
let p = {100,75};
let y = Cercle(p,50);
Draw(y);
let p = {20,20};
let t = {20,100};
let u = {200,100};
let g = {200,20};
let b = Bezier(p,t,u,g);
Draw(b);


