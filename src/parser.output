Grammar

    0 $accept: s $end

    1 s: s e FIN_EXPR
    2  | s en FIN_EXPR
    3  | s T_PRINT FIN_EXPR
    4  | s T_DRAW '(' e ')' FIN_EXPR
    5  | /* empty */

    6 en: T_LET T_ID T_EQUAL e

    7 e: T_NUM
    8  | T_POP e
    9  | T_NEXT e
   10  | '{' e ',' e '}'
   11  | T_CIRCLE '(' e ',' e ')'
   12  | e T_PATH e
   13  | e T_PLUS e
   14  | e T_MINUS e
   15  | e T_DIV e
   16  | e T_MULT e
   17  | e T_LEQ e
   18  | e T_LE e
   19  | e T_GEQ e
   20  | e T_GE e
   21  | e T_OR e
   22  | e T_AND e
   23  | T_ID
   24  | e T_EQ e
   25  | T_NOT e
   26  | T_FUN T_ID arg_list
   27  | T_LET T_ID T_EQUAL e T_IN e
   28  | e T_WHERE T_ID T_EQUAL e
   29  | T_IF e T_THEN e T_ELSE e
   30  | '[' list ']'
   31  | e T_PUSH e
   32  | '(' f_arg e ')'
   33  | '(' e ')'

   34 f_arg: e
   35      | f_arg e

   36 arg_list: T_ARROW e
   37         | T_ID arg_list

   38 list: e
   39     | e ',' list
   40     | /* empty */


Terminals, with rules where they appear

$end (0) 0
'(' (40) 4 11 32 33
')' (41) 4 11 32 33
',' (44) 10 11 39
'[' (91) 30
']' (93) 30
'{' (123) 10
'}' (125) 10
error (256)
T_NUM (258) 7
T_ID (259) 6 23 26 27 28 37
T_PRINT (260) 3
FIN_EXPR (261) 1 2 3 4
T_PLUS (262) 13
T_MINUS (263) 14
T_MULT (264) 16
T_DIV (265) 15
T_LEQ (266) 17
T_LE (267) 18
T_GEQ (268) 19
T_GE (269) 20
T_EQ (270) 24
T_OR (271) 21
T_AND (272) 22
T_NOT (273) 25
T_EQUAL (274) 6 27 28
T_IF (275) 29
T_ELSE (276) 29
T_THEN (277) 29
T_FUN (278) 26
T_ARROW (279) 36
T_LET (280) 6 27
T_IN (281) 27
T_WHERE (282) 28
T_NEXT (283) 9
T_POP (284) 8
T_PUSH (285) 31
T_PATH (286) 12
T_CIRCLE (287) 11
T_DRAW (288) 4


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
s (42)
    on left: 1 2 3 4 5, on right: 0 1 2 3 4
en (43)
    on left: 6, on right: 2
e (44)
    on left: 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
    26 27 28 29 30 31 32 33, on right: 1 4 6 8 9 10 11 12 13 14 15
    16 17 18 19 20 21 22 24 25 27 28 29 31 32 33 34 35 36 38 39
f_arg (45)
    on left: 34 35, on right: 32 35
arg_list (46)
    on left: 36 37, on right: 26 37
list (47)
    on left: 38 39 40, on right: 30 39


State 0

    0 $accept: . s $end

    $default  reduce using rule 5 (s)

    s  go to state 1


State 1

    0 $accept: s . $end
    1 s: s . e FIN_EXPR
    2  | s . en FIN_EXPR
    3  | s . T_PRINT FIN_EXPR
    4  | s . T_DRAW '(' e ')' FIN_EXPR

    $end      shift, and go to state 2
    T_NUM     shift, and go to state 3
    T_ID      shift, and go to state 4
    T_PRINT   shift, and go to state 5
    T_NOT     shift, and go to state 6
    T_IF      shift, and go to state 7
    T_FUN     shift, and go to state 8
    T_LET     shift, and go to state 9
    T_NEXT    shift, and go to state 10
    T_POP     shift, and go to state 11
    T_CIRCLE  shift, and go to state 12
    T_DRAW    shift, and go to state 13
    '('       shift, and go to state 14
    '{'       shift, and go to state 15
    '['       shift, and go to state 16

    en  go to state 17
    e   go to state 18


State 2

    0 $accept: s $end .

    $default  accept


State 3

    7 e: T_NUM .

    $default  reduce using rule 7 (e)


State 4

   23 e: T_ID .

    $default  reduce using rule 23 (e)


State 5

    3 s: s T_PRINT . FIN_EXPR

    FIN_EXPR  shift, and go to state 19


State 6

   25 e: T_NOT . e

    T_NUM     shift, and go to state 3
    T_ID      shift, and go to state 4
    T_NOT     shift, and go to state 6
    T_IF      shift, and go to state 7
    T_FUN     shift, and go to state 8
    T_LET     shift, and go to state 20
    T_NEXT    shift, and go to state 10
    T_POP     shift, and go to state 11
    T_CIRCLE  shift, and go to state 12
    '('       shift, and go to state 14
    '{'       shift, and go to state 15
    '['       shift, and go to state 16

    e  go to state 21


State 7

   29 e: T_IF . e T_THEN e T_ELSE e

    T_NUM     shift, and go to state 3
    T_ID      shift, and go to state 4
    T_NOT     shift, and go to state 6
    T_IF      shift, and go to state 7
    T_FUN     shift, and go to state 8
    T_LET     shift, and go to state 20
    T_NEXT    shift, and go to state 10
    T_POP     shift, and go to state 11
    T_CIRCLE  shift, and go to state 12
    '('       shift, and go to state 14
    '{'       shift, and go to state 15
    '['       shift, and go to state 16

    e  go to state 22


State 8

   26 e: T_FUN . T_ID arg_list

    T_ID  shift, and go to state 23


State 9

    6 en: T_LET . T_ID T_EQUAL e
   27 e: T_LET . T_ID T_EQUAL e T_IN e

    T_ID  shift, and go to state 24


State 10

    9 e: T_NEXT . e

    T_NUM     shift, and go to state 3
    T_ID      shift, and go to state 4
    T_NOT     shift, and go to state 6
    T_IF      shift, and go to state 7
    T_FUN     shift, and go to state 8
    T_LET     shift, and go to state 20
    T_NEXT    shift, and go to state 10
    T_POP     shift, and go to state 11
    T_CIRCLE  shift, and go to state 12
    '('       shift, and go to state 14
    '{'       shift, and go to state 15
    '['       shift, and go to state 16

    e  go to state 25


State 11

    8 e: T_POP . e

    T_NUM     shift, and go to state 3
    T_ID      shift, and go to state 4
    T_NOT     shift, and go to state 6
    T_IF      shift, and go to state 7
    T_FUN     shift, and go to state 8
    T_LET     shift, and go to state 20
    T_NEXT    shift, and go to state 10
    T_POP     shift, and go to state 11
    T_CIRCLE  shift, and go to state 12
    '('       shift, and go to state 14
    '{'       shift, and go to state 15
    '['       shift, and go to state 16

    e  go to state 26


State 12

   11 e: T_CIRCLE . '(' e ',' e ')'

    '('  shift, and go to state 27


State 13

    4 s: s T_DRAW . '(' e ')' FIN_EXPR

    '('  shift, and go to state 28


State 14

   32 e: '(' . f_arg e ')'
   33  | '(' . e ')'

    T_NUM     shift, and go to state 3
    T_ID      shift, and go to state 4
    T_NOT     shift, and go to state 6
    T_IF      shift, and go to state 7
    T_FUN     shift, and go to state 8
    T_LET     shift, and go to state 20
    T_NEXT    shift, and go to state 10
    T_POP     shift, and go to state 11
    T_CIRCLE  shift, and go to state 12
    '('       shift, and go to state 14
    '{'       shift, and go to state 15
    '['       shift, and go to state 16

    e      go to state 29
    f_arg  go to state 30


State 15

   10 e: '{' . e ',' e '}'

    T_NUM     shift, and go to state 3
    T_ID      shift, and go to state 4
    T_NOT     shift, and go to state 6
    T_IF      shift, and go to state 7
    T_FUN     shift, and go to state 8
    T_LET     shift, and go to state 20
    T_NEXT    shift, and go to state 10
    T_POP     shift, and go to state 11
    T_CIRCLE  shift, and go to state 12
    '('       shift, and go to state 14
    '{'       shift, and go to state 15
    '['       shift, and go to state 16

    e  go to state 31


State 16

   30 e: '[' . list ']'

    T_NUM     shift, and go to state 3
    T_ID      shift, and go to state 4
    T_NOT     shift, and go to state 6
    T_IF      shift, and go to state 7
    T_FUN     shift, and go to state 8
    T_LET     shift, and go to state 20
    T_NEXT    shift, and go to state 10
    T_POP     shift, and go to state 11
    T_CIRCLE  shift, and go to state 12
    '('       shift, and go to state 14
    '{'       shift, and go to state 15
    '['       shift, and go to state 16

    $default  reduce using rule 40 (list)

    e     go to state 32
    list  go to state 33


State 17

    2 s: s en . FIN_EXPR

    FIN_EXPR  shift, and go to state 34


State 18

    1 s: s e . FIN_EXPR
   12 e: e . T_PATH e
   13  | e . T_PLUS e
   14  | e . T_MINUS e
   15  | e . T_DIV e
   16  | e . T_MULT e
   17  | e . T_LEQ e
   18  | e . T_LE e
   19  | e . T_GEQ e
   20  | e . T_GE e
   21  | e . T_OR e
   22  | e . T_AND e
   24  | e . T_EQ e
   28  | e . T_WHERE T_ID T_EQUAL e
   31  | e . T_PUSH e

    FIN_EXPR  shift, and go to state 35
    T_PLUS    shift, and go to state 36
    T_MINUS   shift, and go to state 37
    T_MULT    shift, and go to state 38
    T_DIV     shift, and go to state 39
    T_LEQ     shift, and go to state 40
    T_LE      shift, and go to state 41
    T_GEQ     shift, and go to state 42
    T_GE      shift, and go to state 43
    T_EQ      shift, and go to state 44
    T_OR      shift, and go to state 45
    T_AND     shift, and go to state 46
    T_WHERE   shift, and go to state 47
    T_PUSH    shift, and go to state 48
    T_PATH    shift, and go to state 49


State 19

    3 s: s T_PRINT FIN_EXPR .

    $default  reduce using rule 3 (s)


State 20

   27 e: T_LET . T_ID T_EQUAL e T_IN e

    T_ID  shift, and go to state 50


State 21

   12 e: e . T_PATH e
   13  | e . T_PLUS e
   14  | e . T_MINUS e
   15  | e . T_DIV e
   16  | e . T_MULT e
   17  | e . T_LEQ e
   18  | e . T_LE e
   19  | e . T_GEQ e
   20  | e . T_GE e
   21  | e . T_OR e
   22  | e . T_AND e
   24  | e . T_EQ e
   25  | T_NOT e .
   28  | e . T_WHERE T_ID T_EQUAL e
   31  | e . T_PUSH e

    T_PLUS   shift, and go to state 36
    T_MINUS  shift, and go to state 37
    T_MULT   shift, and go to state 38
    T_DIV    shift, and go to state 39
    T_PUSH   shift, and go to state 48

    $default  reduce using rule 25 (e)


State 22

   12 e: e . T_PATH e
   13  | e . T_PLUS e
   14  | e . T_MINUS e
   15  | e . T_DIV e
   16  | e . T_MULT e
   17  | e . T_LEQ e
   18  | e . T_LE e
   19  | e . T_GEQ e
   20  | e . T_GE e
   21  | e . T_OR e
   22  | e . T_AND e
   24  | e . T_EQ e
   28  | e . T_WHERE T_ID T_EQUAL e
   29  | T_IF e . T_THEN e T_ELSE e
   31  | e . T_PUSH e

    T_PLUS   shift, and go to state 36
    T_MINUS  shift, and go to state 37
    T_MULT   shift, and go to state 38
    T_DIV    shift, and go to state 39
    T_LEQ    shift, and go to state 40
    T_LE     shift, and go to state 41
    T_GEQ    shift, and go to state 42
    T_GE     shift, and go to state 43
    T_EQ     shift, and go to state 44
    T_OR     shift, and go to state 45
    T_AND    shift, and go to state 46
    T_THEN   shift, and go to state 51
    T_WHERE  shift, and go to state 47
    T_PUSH   shift, and go to state 48
    T_PATH   shift, and go to state 49


State 23

   26 e: T_FUN T_ID . arg_list

    T_ID     shift, and go to state 52
    T_ARROW  shift, and go to state 53

    arg_list  go to state 54


State 24

    6 en: T_LET T_ID . T_EQUAL e
   27 e: T_LET T_ID . T_EQUAL e T_IN e

    T_EQUAL  shift, and go to state 55


State 25

    9 e: T_NEXT e .
   12  | e . T_PATH e
   13  | e . T_PLUS e
   14  | e . T_MINUS e
   15  | e . T_DIV e
   16  | e . T_MULT e
   17  | e . T_LEQ e
   18  | e . T_LE e
   19  | e . T_GEQ e
   20  | e . T_GE e
   21  | e . T_OR e
   22  | e . T_AND e
   24  | e . T_EQ e
   28  | e . T_WHERE T_ID T_EQUAL e
   31  | e . T_PUSH e

    T_PLUS   shift, and go to state 36
    T_MINUS  shift, and go to state 37
    T_MULT   shift, and go to state 38
    T_DIV    shift, and go to state 39
    T_PUSH   shift, and go to state 48

    $default  reduce using rule 9 (e)


State 26

    8 e: T_POP e .
   12  | e . T_PATH e
   13  | e . T_PLUS e
   14  | e . T_MINUS e
   15  | e . T_DIV e
   16  | e . T_MULT e
   17  | e . T_LEQ e
   18  | e . T_LE e
   19  | e . T_GEQ e
   20  | e . T_GE e
   21  | e . T_OR e
   22  | e . T_AND e
   24  | e . T_EQ e
   28  | e . T_WHERE T_ID T_EQUAL e
   31  | e . T_PUSH e

    T_PLUS   shift, and go to state 36
    T_MINUS  shift, and go to state 37
    T_MULT   shift, and go to state 38
    T_DIV    shift, and go to state 39
    T_PUSH   shift, and go to state 48

    $default  reduce using rule 8 (e)


State 27

   11 e: T_CIRCLE '(' . e ',' e ')'

    T_NUM     shift, and go to state 3
    T_ID      shift, and go to state 4
    T_NOT     shift, and go to state 6
    T_IF      shift, and go to state 7
    T_FUN     shift, and go to state 8
    T_LET     shift, and go to state 20
    T_NEXT    shift, and go to state 10
    T_POP     shift, and go to state 11
    T_CIRCLE  shift, and go to state 12
    '('       shift, and go to state 14
    '{'       shift, and go to state 15
    '['       shift, and go to state 16

    e  go to state 56


State 28

    4 s: s T_DRAW '(' . e ')' FIN_EXPR

    T_NUM     shift, and go to state 3
    T_ID      shift, and go to state 4
    T_NOT     shift, and go to state 6
    T_IF      shift, and go to state 7
    T_FUN     shift, and go to state 8
    T_LET     shift, and go to state 20
    T_NEXT    shift, and go to state 10
    T_POP     shift, and go to state 11
    T_CIRCLE  shift, and go to state 12
    '('       shift, and go to state 14
    '{'       shift, and go to state 15
    '['       shift, and go to state 16

    e  go to state 57


State 29

   12 e: e . T_PATH e
   13  | e . T_PLUS e
   14  | e . T_MINUS e
   15  | e . T_DIV e
   16  | e . T_MULT e
   17  | e . T_LEQ e
   18  | e . T_LE e
   19  | e . T_GEQ e
   20  | e . T_GE e
   21  | e . T_OR e
   22  | e . T_AND e
   24  | e . T_EQ e
   28  | e . T_WHERE T_ID T_EQUAL e
   31  | e . T_PUSH e
   33  | '(' e . ')'
   34 f_arg: e .

    T_PLUS   shift, and go to state 36
    T_MINUS  shift, and go to state 37
    T_MULT   shift, and go to state 38
    T_DIV    shift, and go to state 39
    T_LEQ    shift, and go to state 40
    T_LE     shift, and go to state 41
    T_GEQ    shift, and go to state 42
    T_GE     shift, and go to state 43
    T_EQ     shift, and go to state 44
    T_OR     shift, and go to state 45
    T_AND    shift, and go to state 46
    T_WHERE  shift, and go to state 47
    T_PUSH   shift, and go to state 48
    T_PATH   shift, and go to state 49
    ')'      shift, and go to state 58

    $default  reduce using rule 34 (f_arg)


State 30

   32 e: '(' f_arg . e ')'
   35 f_arg: f_arg . e

    T_NUM     shift, and go to state 3
    T_ID      shift, and go to state 4
    T_NOT     shift, and go to state 6
    T_IF      shift, and go to state 7
    T_FUN     shift, and go to state 8
    T_LET     shift, and go to state 20
    T_NEXT    shift, and go to state 10
    T_POP     shift, and go to state 11
    T_CIRCLE  shift, and go to state 12
    '('       shift, and go to state 14
    '{'       shift, and go to state 15
    '['       shift, and go to state 16

    e  go to state 59


State 31

   10 e: '{' e . ',' e '}'
   12  | e . T_PATH e
   13  | e . T_PLUS e
   14  | e . T_MINUS e
   15  | e . T_DIV e
   16  | e . T_MULT e
   17  | e . T_LEQ e
   18  | e . T_LE e
   19  | e . T_GEQ e
   20  | e . T_GE e
   21  | e . T_OR e
   22  | e . T_AND e
   24  | e . T_EQ e
   28  | e . T_WHERE T_ID T_EQUAL e
   31  | e . T_PUSH e

    T_PLUS   shift, and go to state 36
    T_MINUS  shift, and go to state 37
    T_MULT   shift, and go to state 38
    T_DIV    shift, and go to state 39
    T_LEQ    shift, and go to state 40
    T_LE     shift, and go to state 41
    T_GEQ    shift, and go to state 42
    T_GE     shift, and go to state 43
    T_EQ     shift, and go to state 44
    T_OR     shift, and go to state 45
    T_AND    shift, and go to state 46
    T_WHERE  shift, and go to state 47
    T_PUSH   shift, and go to state 48
    T_PATH   shift, and go to state 49
    ','      shift, and go to state 60


State 32

   12 e: e . T_PATH e
   13  | e . T_PLUS e
   14  | e . T_MINUS e
   15  | e . T_DIV e
   16  | e . T_MULT e
   17  | e . T_LEQ e
   18  | e . T_LE e
   19  | e . T_GEQ e
   20  | e . T_GE e
   21  | e . T_OR e
   22  | e . T_AND e
   24  | e . T_EQ e
   28  | e . T_WHERE T_ID T_EQUAL e
   31  | e . T_PUSH e
   38 list: e .
   39     | e . ',' list

    T_PLUS   shift, and go to state 36
    T_MINUS  shift, and go to state 37
    T_MULT   shift, and go to state 38
    T_DIV    shift, and go to state 39
    T_LEQ    shift, and go to state 40
    T_LE     shift, and go to state 41
    T_GEQ    shift, and go to state 42
    T_GE     shift, and go to state 43
    T_EQ     shift, and go to state 44
    T_OR     shift, and go to state 45
    T_AND    shift, and go to state 46
    T_WHERE  shift, and go to state 47
    T_PUSH   shift, and go to state 48
    T_PATH   shift, and go to state 49
    ','      shift, and go to state 61

    $default  reduce using rule 38 (list)


State 33

   30 e: '[' list . ']'

    ']'  shift, and go to state 62


State 34

    2 s: s en FIN_EXPR .

    $default  reduce using rule 2 (s)


State 35

    1 s: s e FIN_EXPR .

    $default  reduce using rule 1 (s)


State 36

   13 e: e T_PLUS . e

    T_NUM     shift, and go to state 3
    T_ID      shift, and go to state 4
    T_NOT     shift, and go to state 6
    T_IF      shift, and go to state 7
    T_FUN     shift, and go to state 8
    T_LET     shift, and go to state 20
    T_NEXT    shift, and go to state 10
    T_POP     shift, and go to state 11
    T_CIRCLE  shift, and go to state 12
    '('       shift, and go to state 14
    '{'       shift, and go to state 15
    '['       shift, and go to state 16

    e  go to state 63


State 37

   14 e: e T_MINUS . e

    T_NUM     shift, and go to state 3
    T_ID      shift, and go to state 4
    T_NOT     shift, and go to state 6
    T_IF      shift, and go to state 7
    T_FUN     shift, and go to state 8
    T_LET     shift, and go to state 20
    T_NEXT    shift, and go to state 10
    T_POP     shift, and go to state 11
    T_CIRCLE  shift, and go to state 12
    '('       shift, and go to state 14
    '{'       shift, and go to state 15
    '['       shift, and go to state 16

    e  go to state 64


State 38

   16 e: e T_MULT . e

    T_NUM     shift, and go to state 3
    T_ID      shift, and go to state 4
    T_NOT     shift, and go to state 6
    T_IF      shift, and go to state 7
    T_FUN     shift, and go to state 8
    T_LET     shift, and go to state 20
    T_NEXT    shift, and go to state 10
    T_POP     shift, and go to state 11
    T_CIRCLE  shift, and go to state 12
    '('       shift, and go to state 14
    '{'       shift, and go to state 15
    '['       shift, and go to state 16

    e  go to state 65


State 39

   15 e: e T_DIV . e

    T_NUM     shift, and go to state 3
    T_ID      shift, and go to state 4
    T_NOT     shift, and go to state 6
    T_IF      shift, and go to state 7
    T_FUN     shift, and go to state 8
    T_LET     shift, and go to state 20
    T_NEXT    shift, and go to state 10
    T_POP     shift, and go to state 11
    T_CIRCLE  shift, and go to state 12
    '('       shift, and go to state 14
    '{'       shift, and go to state 15
    '['       shift, and go to state 16

    e  go to state 66


State 40

   17 e: e T_LEQ . e

    T_NUM     shift, and go to state 3
    T_ID      shift, and go to state 4
    T_NOT     shift, and go to state 6
    T_IF      shift, and go to state 7
    T_FUN     shift, and go to state 8
    T_LET     shift, and go to state 20
    T_NEXT    shift, and go to state 10
    T_POP     shift, and go to state 11
    T_CIRCLE  shift, and go to state 12
    '('       shift, and go to state 14
    '{'       shift, and go to state 15
    '['       shift, and go to state 16

    e  go to state 67


State 41

   18 e: e T_LE . e

    T_NUM     shift, and go to state 3
    T_ID      shift, and go to state 4
    T_NOT     shift, and go to state 6
    T_IF      shift, and go to state 7
    T_FUN     shift, and go to state 8
    T_LET     shift, and go to state 20
    T_NEXT    shift, and go to state 10
    T_POP     shift, and go to state 11
    T_CIRCLE  shift, and go to state 12
    '('       shift, and go to state 14
    '{'       shift, and go to state 15
    '['       shift, and go to state 16

    e  go to state 68


State 42

   19 e: e T_GEQ . e

    T_NUM     shift, and go to state 3
    T_ID      shift, and go to state 4
    T_NOT     shift, and go to state 6
    T_IF      shift, and go to state 7
    T_FUN     shift, and go to state 8
    T_LET     shift, and go to state 20
    T_NEXT    shift, and go to state 10
    T_POP     shift, and go to state 11
    T_CIRCLE  shift, and go to state 12
    '('       shift, and go to state 14
    '{'       shift, and go to state 15
    '['       shift, and go to state 16

    e  go to state 69


State 43

   20 e: e T_GE . e

    T_NUM     shift, and go to state 3
    T_ID      shift, and go to state 4
    T_NOT     shift, and go to state 6
    T_IF      shift, and go to state 7
    T_FUN     shift, and go to state 8
    T_LET     shift, and go to state 20
    T_NEXT    shift, and go to state 10
    T_POP     shift, and go to state 11
    T_CIRCLE  shift, and go to state 12
    '('       shift, and go to state 14
    '{'       shift, and go to state 15
    '['       shift, and go to state 16

    e  go to state 70


State 44

   24 e: e T_EQ . e

    T_NUM     shift, and go to state 3
    T_ID      shift, and go to state 4
    T_NOT     shift, and go to state 6
    T_IF      shift, and go to state 7
    T_FUN     shift, and go to state 8
    T_LET     shift, and go to state 20
    T_NEXT    shift, and go to state 10
    T_POP     shift, and go to state 11
    T_CIRCLE  shift, and go to state 12
    '('       shift, and go to state 14
    '{'       shift, and go to state 15
    '['       shift, and go to state 16

    e  go to state 71


State 45

   21 e: e T_OR . e

    T_NUM     shift, and go to state 3
    T_ID      shift, and go to state 4
    T_NOT     shift, and go to state 6
    T_IF      shift, and go to state 7
    T_FUN     shift, and go to state 8
    T_LET     shift, and go to state 20
    T_NEXT    shift, and go to state 10
    T_POP     shift, and go to state 11
    T_CIRCLE  shift, and go to state 12
    '('       shift, and go to state 14
    '{'       shift, and go to state 15
    '['       shift, and go to state 16

    e  go to state 72


State 46

   22 e: e T_AND . e

    T_NUM     shift, and go to state 3
    T_ID      shift, and go to state 4
    T_NOT     shift, and go to state 6
    T_IF      shift, and go to state 7
    T_FUN     shift, and go to state 8
    T_LET     shift, and go to state 20
    T_NEXT    shift, and go to state 10
    T_POP     shift, and go to state 11
    T_CIRCLE  shift, and go to state 12
    '('       shift, and go to state 14
    '{'       shift, and go to state 15
    '['       shift, and go to state 16

    e  go to state 73


State 47

   28 e: e T_WHERE . T_ID T_EQUAL e

    T_ID  shift, and go to state 74


State 48

   31 e: e T_PUSH . e

    T_NUM     shift, and go to state 3
    T_ID      shift, and go to state 4
    T_NOT     shift, and go to state 6
    T_IF      shift, and go to state 7
    T_FUN     shift, and go to state 8
    T_LET     shift, and go to state 20
    T_NEXT    shift, and go to state 10
    T_POP     shift, and go to state 11
    T_CIRCLE  shift, and go to state 12
    '('       shift, and go to state 14
    '{'       shift, and go to state 15
    '['       shift, and go to state 16

    e  go to state 75


State 49

   12 e: e T_PATH . e

    T_NUM     shift, and go to state 3
    T_ID      shift, and go to state 4
    T_NOT     shift, and go to state 6
    T_IF      shift, and go to state 7
    T_FUN     shift, and go to state 8
    T_LET     shift, and go to state 20
    T_NEXT    shift, and go to state 10
    T_POP     shift, and go to state 11
    T_CIRCLE  shift, and go to state 12
    '('       shift, and go to state 14
    '{'       shift, and go to state 15
    '['       shift, and go to state 16

    e  go to state 76


State 50

   27 e: T_LET T_ID . T_EQUAL e T_IN e

    T_EQUAL  shift, and go to state 77


State 51

   29 e: T_IF e T_THEN . e T_ELSE e

    T_NUM     shift, and go to state 3
    T_ID      shift, and go to state 4
    T_NOT     shift, and go to state 6
    T_IF      shift, and go to state 7
    T_FUN     shift, and go to state 8
    T_LET     shift, and go to state 20
    T_NEXT    shift, and go to state 10
    T_POP     shift, and go to state 11
    T_CIRCLE  shift, and go to state 12
    '('       shift, and go to state 14
    '{'       shift, and go to state 15
    '['       shift, and go to state 16

    e  go to state 78


State 52

   37 arg_list: T_ID . arg_list

    T_ID     shift, and go to state 52
    T_ARROW  shift, and go to state 53

    arg_list  go to state 79


State 53

   36 arg_list: T_ARROW . e

    T_NUM     shift, and go to state 3
    T_ID      shift, and go to state 4
    T_NOT     shift, and go to state 6
    T_IF      shift, and go to state 7
    T_FUN     shift, and go to state 8
    T_LET     shift, and go to state 20
    T_NEXT    shift, and go to state 10
    T_POP     shift, and go to state 11
    T_CIRCLE  shift, and go to state 12
    '('       shift, and go to state 14
    '{'       shift, and go to state 15
    '['       shift, and go to state 16

    e  go to state 80


State 54

   26 e: T_FUN T_ID arg_list .

    $default  reduce using rule 26 (e)


State 55

    6 en: T_LET T_ID T_EQUAL . e
   27 e: T_LET T_ID T_EQUAL . e T_IN e

    T_NUM     shift, and go to state 3
    T_ID      shift, and go to state 4
    T_NOT     shift, and go to state 6
    T_IF      shift, and go to state 7
    T_FUN     shift, and go to state 8
    T_LET     shift, and go to state 20
    T_NEXT    shift, and go to state 10
    T_POP     shift, and go to state 11
    T_CIRCLE  shift, and go to state 12
    '('       shift, and go to state 14
    '{'       shift, and go to state 15
    '['       shift, and go to state 16

    e  go to state 81


State 56

   11 e: T_CIRCLE '(' e . ',' e ')'
   12  | e . T_PATH e
   13  | e . T_PLUS e
   14  | e . T_MINUS e
   15  | e . T_DIV e
   16  | e . T_MULT e
   17  | e . T_LEQ e
   18  | e . T_LE e
   19  | e . T_GEQ e
   20  | e . T_GE e
   21  | e . T_OR e
   22  | e . T_AND e
   24  | e . T_EQ e
   28  | e . T_WHERE T_ID T_EQUAL e
   31  | e . T_PUSH e

    T_PLUS   shift, and go to state 36
    T_MINUS  shift, and go to state 37
    T_MULT   shift, and go to state 38
    T_DIV    shift, and go to state 39
    T_LEQ    shift, and go to state 40
    T_LE     shift, and go to state 41
    T_GEQ    shift, and go to state 42
    T_GE     shift, and go to state 43
    T_EQ     shift, and go to state 44
    T_OR     shift, and go to state 45
    T_AND    shift, and go to state 46
    T_WHERE  shift, and go to state 47
    T_PUSH   shift, and go to state 48
    T_PATH   shift, and go to state 49
    ','      shift, and go to state 82


State 57

    4 s: s T_DRAW '(' e . ')' FIN_EXPR
   12 e: e . T_PATH e
   13  | e . T_PLUS e
   14  | e . T_MINUS e
   15  | e . T_DIV e
   16  | e . T_MULT e
   17  | e . T_LEQ e
   18  | e . T_LE e
   19  | e . T_GEQ e
   20  | e . T_GE e
   21  | e . T_OR e
   22  | e . T_AND e
   24  | e . T_EQ e
   28  | e . T_WHERE T_ID T_EQUAL e
   31  | e . T_PUSH e

    T_PLUS   shift, and go to state 36
    T_MINUS  shift, and go to state 37
    T_MULT   shift, and go to state 38
    T_DIV    shift, and go to state 39
    T_LEQ    shift, and go to state 40
    T_LE     shift, and go to state 41
    T_GEQ    shift, and go to state 42
    T_GE     shift, and go to state 43
    T_EQ     shift, and go to state 44
    T_OR     shift, and go to state 45
    T_AND    shift, and go to state 46
    T_WHERE  shift, and go to state 47
    T_PUSH   shift, and go to state 48
    T_PATH   shift, and go to state 49
    ')'      shift, and go to state 83


State 58

   33 e: '(' e ')' .

    $default  reduce using rule 33 (e)


State 59

   12 e: e . T_PATH e
   13  | e . T_PLUS e
   14  | e . T_MINUS e
   15  | e . T_DIV e
   16  | e . T_MULT e
   17  | e . T_LEQ e
   18  | e . T_LE e
   19  | e . T_GEQ e
   20  | e . T_GE e
   21  | e . T_OR e
   22  | e . T_AND e
   24  | e . T_EQ e
   28  | e . T_WHERE T_ID T_EQUAL e
   31  | e . T_PUSH e
   32  | '(' f_arg e . ')'
   35 f_arg: f_arg e .

    T_PLUS   shift, and go to state 36
    T_MINUS  shift, and go to state 37
    T_MULT   shift, and go to state 38
    T_DIV    shift, and go to state 39
    T_LEQ    shift, and go to state 40
    T_LE     shift, and go to state 41
    T_GEQ    shift, and go to state 42
    T_GE     shift, and go to state 43
    T_EQ     shift, and go to state 44
    T_OR     shift, and go to state 45
    T_AND    shift, and go to state 46
    T_WHERE  shift, and go to state 47
    T_PUSH   shift, and go to state 48
    T_PATH   shift, and go to state 49
    ')'      shift, and go to state 84

    $default  reduce using rule 35 (f_arg)


State 60

   10 e: '{' e ',' . e '}'

    T_NUM     shift, and go to state 3
    T_ID      shift, and go to state 4
    T_NOT     shift, and go to state 6
    T_IF      shift, and go to state 7
    T_FUN     shift, and go to state 8
    T_LET     shift, and go to state 20
    T_NEXT    shift, and go to state 10
    T_POP     shift, and go to state 11
    T_CIRCLE  shift, and go to state 12
    '('       shift, and go to state 14
    '{'       shift, and go to state 15
    '['       shift, and go to state 16

    e  go to state 85


State 61

   39 list: e ',' . list

    T_NUM     shift, and go to state 3
    T_ID      shift, and go to state 4
    T_NOT     shift, and go to state 6
    T_IF      shift, and go to state 7
    T_FUN     shift, and go to state 8
    T_LET     shift, and go to state 20
    T_NEXT    shift, and go to state 10
    T_POP     shift, and go to state 11
    T_CIRCLE  shift, and go to state 12
    '('       shift, and go to state 14
    '{'       shift, and go to state 15
    '['       shift, and go to state 16

    $default  reduce using rule 40 (list)

    e     go to state 32
    list  go to state 86


State 62

   30 e: '[' list ']' .

    $default  reduce using rule 30 (e)


State 63

   12 e: e . T_PATH e
   13  | e . T_PLUS e
   13  | e T_PLUS e .
   14  | e . T_MINUS e
   15  | e . T_DIV e
   16  | e . T_MULT e
   17  | e . T_LEQ e
   18  | e . T_LE e
   19  | e . T_GEQ e
   20  | e . T_GE e
   21  | e . T_OR e
   22  | e . T_AND e
   24  | e . T_EQ e
   28  | e . T_WHERE T_ID T_EQUAL e
   31  | e . T_PUSH e

    T_MULT  shift, and go to state 38
    T_DIV   shift, and go to state 39
    T_PUSH  shift, and go to state 48

    $default  reduce using rule 13 (e)


State 64

   12 e: e . T_PATH e
   13  | e . T_PLUS e
   14  | e . T_MINUS e
   14  | e T_MINUS e .
   15  | e . T_DIV e
   16  | e . T_MULT e
   17  | e . T_LEQ e
   18  | e . T_LE e
   19  | e . T_GEQ e
   20  | e . T_GE e
   21  | e . T_OR e
   22  | e . T_AND e
   24  | e . T_EQ e
   28  | e . T_WHERE T_ID T_EQUAL e
   31  | e . T_PUSH e

    T_MULT  shift, and go to state 38
    T_DIV   shift, and go to state 39
    T_PUSH  shift, and go to state 48

    $default  reduce using rule 14 (e)


State 65

   12 e: e . T_PATH e
   13  | e . T_PLUS e
   14  | e . T_MINUS e
   15  | e . T_DIV e
   16  | e . T_MULT e
   16  | e T_MULT e .
   17  | e . T_LEQ e
   18  | e . T_LE e
   19  | e . T_GEQ e
   20  | e . T_GE e
   21  | e . T_OR e
   22  | e . T_AND e
   24  | e . T_EQ e
   28  | e . T_WHERE T_ID T_EQUAL e
   31  | e . T_PUSH e

    $default  reduce using rule 16 (e)


State 66

   12 e: e . T_PATH e
   13  | e . T_PLUS e
   14  | e . T_MINUS e
   15  | e . T_DIV e
   15  | e T_DIV e .
   16  | e . T_MULT e
   17  | e . T_LEQ e
   18  | e . T_LE e
   19  | e . T_GEQ e
   20  | e . T_GE e
   21  | e . T_OR e
   22  | e . T_AND e
   24  | e . T_EQ e
   28  | e . T_WHERE T_ID T_EQUAL e
   31  | e . T_PUSH e

    $default  reduce using rule 15 (e)


State 67

   12 e: e . T_PATH e
   13  | e . T_PLUS e
   14  | e . T_MINUS e
   15  | e . T_DIV e
   16  | e . T_MULT e
   17  | e . T_LEQ e
   17  | e T_LEQ e .
   18  | e . T_LE e
   19  | e . T_GEQ e
   20  | e . T_GE e
   21  | e . T_OR e
   22  | e . T_AND e
   24  | e . T_EQ e
   28  | e . T_WHERE T_ID T_EQUAL e
   31  | e . T_PUSH e

    T_PLUS   shift, and go to state 36
    T_MINUS  shift, and go to state 37
    T_MULT   shift, and go to state 38
    T_DIV    shift, and go to state 39
    T_OR     shift, and go to state 45
    T_AND    shift, and go to state 46
    T_PUSH   shift, and go to state 48
    T_PATH   shift, and go to state 49

    $default  reduce using rule 17 (e)


State 68

   12 e: e . T_PATH e
   13  | e . T_PLUS e
   14  | e . T_MINUS e
   15  | e . T_DIV e
   16  | e . T_MULT e
   17  | e . T_LEQ e
   18  | e . T_LE e
   18  | e T_LE e .
   19  | e . T_GEQ e
   20  | e . T_GE e
   21  | e . T_OR e
   22  | e . T_AND e
   24  | e . T_EQ e
   28  | e . T_WHERE T_ID T_EQUAL e
   31  | e . T_PUSH e

    T_PLUS   shift, and go to state 36
    T_MINUS  shift, and go to state 37
    T_MULT   shift, and go to state 38
    T_DIV    shift, and go to state 39
    T_OR     shift, and go to state 45
    T_AND    shift, and go to state 46
    T_PUSH   shift, and go to state 48
    T_PATH   shift, and go to state 49

    $default  reduce using rule 18 (e)


State 69

   12 e: e . T_PATH e
   13  | e . T_PLUS e
   14  | e . T_MINUS e
   15  | e . T_DIV e
   16  | e . T_MULT e
   17  | e . T_LEQ e
   18  | e . T_LE e
   19  | e . T_GEQ e
   19  | e T_GEQ e .
   20  | e . T_GE e
   21  | e . T_OR e
   22  | e . T_AND e
   24  | e . T_EQ e
   28  | e . T_WHERE T_ID T_EQUAL e
   31  | e . T_PUSH e

    T_PLUS   shift, and go to state 36
    T_MINUS  shift, and go to state 37
    T_MULT   shift, and go to state 38
    T_DIV    shift, and go to state 39
    T_OR     shift, and go to state 45
    T_AND    shift, and go to state 46
    T_PUSH   shift, and go to state 48
    T_PATH   shift, and go to state 49

    $default  reduce using rule 19 (e)


State 70

   12 e: e . T_PATH e
   13  | e . T_PLUS e
   14  | e . T_MINUS e
   15  | e . T_DIV e
   16  | e . T_MULT e
   17  | e . T_LEQ e
   18  | e . T_LE e
   19  | e . T_GEQ e
   20  | e . T_GE e
   20  | e T_GE e .
   21  | e . T_OR e
   22  | e . T_AND e
   24  | e . T_EQ e
   28  | e . T_WHERE T_ID T_EQUAL e
   31  | e . T_PUSH e

    T_PLUS   shift, and go to state 36
    T_MINUS  shift, and go to state 37
    T_MULT   shift, and go to state 38
    T_DIV    shift, and go to state 39
    T_OR     shift, and go to state 45
    T_AND    shift, and go to state 46
    T_PUSH   shift, and go to state 48
    T_PATH   shift, and go to state 49

    $default  reduce using rule 20 (e)


State 71

   12 e: e . T_PATH e
   13  | e . T_PLUS e
   14  | e . T_MINUS e
   15  | e . T_DIV e
   16  | e . T_MULT e
   17  | e . T_LEQ e
   18  | e . T_LE e
   19  | e . T_GEQ e
   20  | e . T_GE e
   21  | e . T_OR e
   22  | e . T_AND e
   24  | e . T_EQ e
   24  | e T_EQ e .
   28  | e . T_WHERE T_ID T_EQUAL e
   31  | e . T_PUSH e

    T_PLUS   shift, and go to state 36
    T_MINUS  shift, and go to state 37
    T_MULT   shift, and go to state 38
    T_DIV    shift, and go to state 39
    T_OR     shift, and go to state 45
    T_AND    shift, and go to state 46
    T_PUSH   shift, and go to state 48
    T_PATH   shift, and go to state 49

    $default  reduce using rule 24 (e)


State 72

   12 e: e . T_PATH e
   13  | e . T_PLUS e
   14  | e . T_MINUS e
   15  | e . T_DIV e
   16  | e . T_MULT e
   17  | e . T_LEQ e
   18  | e . T_LE e
   19  | e . T_GEQ e
   20  | e . T_GE e
   21  | e . T_OR e
   21  | e T_OR e .
   22  | e . T_AND e
   24  | e . T_EQ e
   28  | e . T_WHERE T_ID T_EQUAL e
   31  | e . T_PUSH e

    T_PLUS   shift, and go to state 36
    T_MINUS  shift, and go to state 37
    T_MULT   shift, and go to state 38
    T_DIV    shift, and go to state 39
    T_AND    shift, and go to state 46
    T_PUSH   shift, and go to state 48
    T_PATH   shift, and go to state 49

    $default  reduce using rule 21 (e)


State 73

   12 e: e . T_PATH e
   13  | e . T_PLUS e
   14  | e . T_MINUS e
   15  | e . T_DIV e
   16  | e . T_MULT e
   17  | e . T_LEQ e
   18  | e . T_LE e
   19  | e . T_GEQ e
   20  | e . T_GE e
   21  | e . T_OR e
   22  | e . T_AND e
   22  | e T_AND e .
   24  | e . T_EQ e
   28  | e . T_WHERE T_ID T_EQUAL e
   31  | e . T_PUSH e

    T_PLUS   shift, and go to state 36
    T_MINUS  shift, and go to state 37
    T_MULT   shift, and go to state 38
    T_DIV    shift, and go to state 39
    T_PUSH   shift, and go to state 48

    $default  reduce using rule 22 (e)


State 74

   28 e: e T_WHERE T_ID . T_EQUAL e

    T_EQUAL  shift, and go to state 87


State 75

   12 e: e . T_PATH e
   13  | e . T_PLUS e
   14  | e . T_MINUS e
   15  | e . T_DIV e
   16  | e . T_MULT e
   17  | e . T_LEQ e
   18  | e . T_LE e
   19  | e . T_GEQ e
   20  | e . T_GE e
   21  | e . T_OR e
   22  | e . T_AND e
   24  | e . T_EQ e
   28  | e . T_WHERE T_ID T_EQUAL e
   31  | e . T_PUSH e
   31  | e T_PUSH e .

    $default  reduce using rule 31 (e)


State 76

   12 e: e . T_PATH e
   12  | e T_PATH e .
   13  | e . T_PLUS e
   14  | e . T_MINUS e
   15  | e . T_DIV e
   16  | e . T_MULT e
   17  | e . T_LEQ e
   18  | e . T_LE e
   19  | e . T_GEQ e
   20  | e . T_GE e
   21  | e . T_OR e
   22  | e . T_AND e
   24  | e . T_EQ e
   28  | e . T_WHERE T_ID T_EQUAL e
   31  | e . T_PUSH e

    T_PLUS   shift, and go to state 36
    T_MINUS  shift, and go to state 37
    T_MULT   shift, and go to state 38
    T_DIV    shift, and go to state 39
    T_PUSH   shift, and go to state 48

    $default  reduce using rule 12 (e)


State 77

   27 e: T_LET T_ID T_EQUAL . e T_IN e

    T_NUM     shift, and go to state 3
    T_ID      shift, and go to state 4
    T_NOT     shift, and go to state 6
    T_IF      shift, and go to state 7
    T_FUN     shift, and go to state 8
    T_LET     shift, and go to state 20
    T_NEXT    shift, and go to state 10
    T_POP     shift, and go to state 11
    T_CIRCLE  shift, and go to state 12
    '('       shift, and go to state 14
    '{'       shift, and go to state 15
    '['       shift, and go to state 16

    e  go to state 88


State 78

   12 e: e . T_PATH e
   13  | e . T_PLUS e
   14  | e . T_MINUS e
   15  | e . T_DIV e
   16  | e . T_MULT e
   17  | e . T_LEQ e
   18  | e . T_LE e
   19  | e . T_GEQ e
   20  | e . T_GE e
   21  | e . T_OR e
   22  | e . T_AND e
   24  | e . T_EQ e
   28  | e . T_WHERE T_ID T_EQUAL e
   29  | T_IF e T_THEN e . T_ELSE e
   31  | e . T_PUSH e

    T_PLUS   shift, and go to state 36
    T_MINUS  shift, and go to state 37
    T_MULT   shift, and go to state 38
    T_DIV    shift, and go to state 39
    T_LEQ    shift, and go to state 40
    T_LE     shift, and go to state 41
    T_GEQ    shift, and go to state 42
    T_GE     shift, and go to state 43
    T_EQ     shift, and go to state 44
    T_OR     shift, and go to state 45
    T_AND    shift, and go to state 46
    T_ELSE   shift, and go to state 89
    T_WHERE  shift, and go to state 47
    T_PUSH   shift, and go to state 48
    T_PATH   shift, and go to state 49


State 79

   37 arg_list: T_ID arg_list .

    $default  reduce using rule 37 (arg_list)


State 80

   12 e: e . T_PATH e
   13  | e . T_PLUS e
   14  | e . T_MINUS e
   15  | e . T_DIV e
   16  | e . T_MULT e
   17  | e . T_LEQ e
   18  | e . T_LE e
   19  | e . T_GEQ e
   20  | e . T_GE e
   21  | e . T_OR e
   22  | e . T_AND e
   24  | e . T_EQ e
   28  | e . T_WHERE T_ID T_EQUAL e
   31  | e . T_PUSH e
   36 arg_list: T_ARROW e .

    T_PLUS   shift, and go to state 36
    T_MINUS  shift, and go to state 37
    T_MULT   shift, and go to state 38
    T_DIV    shift, and go to state 39
    T_LEQ    shift, and go to state 40
    T_LE     shift, and go to state 41
    T_GEQ    shift, and go to state 42
    T_GE     shift, and go to state 43
    T_EQ     shift, and go to state 44
    T_OR     shift, and go to state 45
    T_AND    shift, and go to state 46
    T_PUSH   shift, and go to state 48
    T_PATH   shift, and go to state 49

    T_WHERE  error (nonassociative)

    $default  reduce using rule 36 (arg_list)


State 81

    6 en: T_LET T_ID T_EQUAL e .
   12 e: e . T_PATH e
   13  | e . T_PLUS e
   14  | e . T_MINUS e
   15  | e . T_DIV e
   16  | e . T_MULT e
   17  | e . T_LEQ e
   18  | e . T_LE e
   19  | e . T_GEQ e
   20  | e . T_GE e
   21  | e . T_OR e
   22  | e . T_AND e
   24  | e . T_EQ e
   27  | T_LET T_ID T_EQUAL e . T_IN e
   28  | e . T_WHERE T_ID T_EQUAL e
   31  | e . T_PUSH e

    T_PLUS   shift, and go to state 36
    T_MINUS  shift, and go to state 37
    T_MULT   shift, and go to state 38
    T_DIV    shift, and go to state 39
    T_LEQ    shift, and go to state 40
    T_LE     shift, and go to state 41
    T_GEQ    shift, and go to state 42
    T_GE     shift, and go to state 43
    T_EQ     shift, and go to state 44
    T_OR     shift, and go to state 45
    T_AND    shift, and go to state 46
    T_IN     shift, and go to state 90
    T_WHERE  shift, and go to state 47
    T_PUSH   shift, and go to state 48
    T_PATH   shift, and go to state 49

    $default  reduce using rule 6 (en)


State 82

   11 e: T_CIRCLE '(' e ',' . e ')'

    T_NUM     shift, and go to state 3
    T_ID      shift, and go to state 4
    T_NOT     shift, and go to state 6
    T_IF      shift, and go to state 7
    T_FUN     shift, and go to state 8
    T_LET     shift, and go to state 20
    T_NEXT    shift, and go to state 10
    T_POP     shift, and go to state 11
    T_CIRCLE  shift, and go to state 12
    '('       shift, and go to state 14
    '{'       shift, and go to state 15
    '['       shift, and go to state 16

    e  go to state 91


State 83

    4 s: s T_DRAW '(' e ')' . FIN_EXPR

    FIN_EXPR  shift, and go to state 92


State 84

   32 e: '(' f_arg e ')' .

    $default  reduce using rule 32 (e)


State 85

   10 e: '{' e ',' e . '}'
   12  | e . T_PATH e
   13  | e . T_PLUS e
   14  | e . T_MINUS e
   15  | e . T_DIV e
   16  | e . T_MULT e
   17  | e . T_LEQ e
   18  | e . T_LE e
   19  | e . T_GEQ e
   20  | e . T_GE e
   21  | e . T_OR e
   22  | e . T_AND e
   24  | e . T_EQ e
   28  | e . T_WHERE T_ID T_EQUAL e
   31  | e . T_PUSH e

    T_PLUS   shift, and go to state 36
    T_MINUS  shift, and go to state 37
    T_MULT   shift, and go to state 38
    T_DIV    shift, and go to state 39
    T_LEQ    shift, and go to state 40
    T_LE     shift, and go to state 41
    T_GEQ    shift, and go to state 42
    T_GE     shift, and go to state 43
    T_EQ     shift, and go to state 44
    T_OR     shift, and go to state 45
    T_AND    shift, and go to state 46
    T_WHERE  shift, and go to state 47
    T_PUSH   shift, and go to state 48
    T_PATH   shift, and go to state 49
    '}'      shift, and go to state 93


State 86

   39 list: e ',' list .

    $default  reduce using rule 39 (list)


State 87

   28 e: e T_WHERE T_ID T_EQUAL . e

    T_NUM     shift, and go to state 3
    T_ID      shift, and go to state 4
    T_NOT     shift, and go to state 6
    T_IF      shift, and go to state 7
    T_FUN     shift, and go to state 8
    T_LET     shift, and go to state 20
    T_NEXT    shift, and go to state 10
    T_POP     shift, and go to state 11
    T_CIRCLE  shift, and go to state 12
    '('       shift, and go to state 14
    '{'       shift, and go to state 15
    '['       shift, and go to state 16

    e  go to state 94


State 88

   12 e: e . T_PATH e
   13  | e . T_PLUS e
   14  | e . T_MINUS e
   15  | e . T_DIV e
   16  | e . T_MULT e
   17  | e . T_LEQ e
   18  | e . T_LE e
   19  | e . T_GEQ e
   20  | e . T_GE e
   21  | e . T_OR e
   22  | e . T_AND e
   24  | e . T_EQ e
   27  | T_LET T_ID T_EQUAL e . T_IN e
   28  | e . T_WHERE T_ID T_EQUAL e
   31  | e . T_PUSH e

    T_PLUS   shift, and go to state 36
    T_MINUS  shift, and go to state 37
    T_MULT   shift, and go to state 38
    T_DIV    shift, and go to state 39
    T_LEQ    shift, and go to state 40
    T_LE     shift, and go to state 41
    T_GEQ    shift, and go to state 42
    T_GE     shift, and go to state 43
    T_EQ     shift, and go to state 44
    T_OR     shift, and go to state 45
    T_AND    shift, and go to state 46
    T_IN     shift, and go to state 90
    T_WHERE  shift, and go to state 47
    T_PUSH   shift, and go to state 48
    T_PATH   shift, and go to state 49


State 89

   29 e: T_IF e T_THEN e T_ELSE . e

    T_NUM     shift, and go to state 3
    T_ID      shift, and go to state 4
    T_NOT     shift, and go to state 6
    T_IF      shift, and go to state 7
    T_FUN     shift, and go to state 8
    T_LET     shift, and go to state 20
    T_NEXT    shift, and go to state 10
    T_POP     shift, and go to state 11
    T_CIRCLE  shift, and go to state 12
    '('       shift, and go to state 14
    '{'       shift, and go to state 15
    '['       shift, and go to state 16

    e  go to state 95


State 90

   27 e: T_LET T_ID T_EQUAL e T_IN . e

    T_NUM     shift, and go to state 3
    T_ID      shift, and go to state 4
    T_NOT     shift, and go to state 6
    T_IF      shift, and go to state 7
    T_FUN     shift, and go to state 8
    T_LET     shift, and go to state 20
    T_NEXT    shift, and go to state 10
    T_POP     shift, and go to state 11
    T_CIRCLE  shift, and go to state 12
    '('       shift, and go to state 14
    '{'       shift, and go to state 15
    '['       shift, and go to state 16

    e  go to state 96


State 91

   11 e: T_CIRCLE '(' e ',' e . ')'
   12  | e . T_PATH e
   13  | e . T_PLUS e
   14  | e . T_MINUS e
   15  | e . T_DIV e
   16  | e . T_MULT e
   17  | e . T_LEQ e
   18  | e . T_LE e
   19  | e . T_GEQ e
   20  | e . T_GE e
   21  | e . T_OR e
   22  | e . T_AND e
   24  | e . T_EQ e
   28  | e . T_WHERE T_ID T_EQUAL e
   31  | e . T_PUSH e

    T_PLUS   shift, and go to state 36
    T_MINUS  shift, and go to state 37
    T_MULT   shift, and go to state 38
    T_DIV    shift, and go to state 39
    T_LEQ    shift, and go to state 40
    T_LE     shift, and go to state 41
    T_GEQ    shift, and go to state 42
    T_GE     shift, and go to state 43
    T_EQ     shift, and go to state 44
    T_OR     shift, and go to state 45
    T_AND    shift, and go to state 46
    T_WHERE  shift, and go to state 47
    T_PUSH   shift, and go to state 48
    T_PATH   shift, and go to state 49
    ')'      shift, and go to state 97


State 92

    4 s: s T_DRAW '(' e ')' FIN_EXPR .

    $default  reduce using rule 4 (s)


State 93

   10 e: '{' e ',' e '}' .

    $default  reduce using rule 10 (e)


State 94

   12 e: e . T_PATH e
   13  | e . T_PLUS e
   14  | e . T_MINUS e
   15  | e . T_DIV e
   16  | e . T_MULT e
   17  | e . T_LEQ e
   18  | e . T_LE e
   19  | e . T_GEQ e
   20  | e . T_GE e
   21  | e . T_OR e
   22  | e . T_AND e
   24  | e . T_EQ e
   28  | e . T_WHERE T_ID T_EQUAL e
   28  | e T_WHERE T_ID T_EQUAL e .
   31  | e . T_PUSH e

    T_PLUS   shift, and go to state 36
    T_MINUS  shift, and go to state 37
    T_MULT   shift, and go to state 38
    T_DIV    shift, and go to state 39
    T_LEQ    shift, and go to state 40
    T_LE     shift, and go to state 41
    T_GEQ    shift, and go to state 42
    T_GE     shift, and go to state 43
    T_EQ     shift, and go to state 44
    T_OR     shift, and go to state 45
    T_AND    shift, and go to state 46
    T_PUSH   shift, and go to state 48
    T_PATH   shift, and go to state 49

    T_WHERE  error (nonassociative)

    $default  reduce using rule 28 (e)


State 95

   12 e: e . T_PATH e
   13  | e . T_PLUS e
   14  | e . T_MINUS e
   15  | e . T_DIV e
   16  | e . T_MULT e
   17  | e . T_LEQ e
   18  | e . T_LE e
   19  | e . T_GEQ e
   20  | e . T_GE e
   21  | e . T_OR e
   22  | e . T_AND e
   24  | e . T_EQ e
   28  | e . T_WHERE T_ID T_EQUAL e
   29  | T_IF e T_THEN e T_ELSE e .
   31  | e . T_PUSH e

    T_PLUS   shift, and go to state 36
    T_MINUS  shift, and go to state 37
    T_MULT   shift, and go to state 38
    T_DIV    shift, and go to state 39
    T_LEQ    shift, and go to state 40
    T_LE     shift, and go to state 41
    T_GEQ    shift, and go to state 42
    T_GE     shift, and go to state 43
    T_EQ     shift, and go to state 44
    T_OR     shift, and go to state 45
    T_AND    shift, and go to state 46
    T_PUSH   shift, and go to state 48
    T_PATH   shift, and go to state 49

    T_WHERE  error (nonassociative)

    $default  reduce using rule 29 (e)


State 96

   12 e: e . T_PATH e
   13  | e . T_PLUS e
   14  | e . T_MINUS e
   15  | e . T_DIV e
   16  | e . T_MULT e
   17  | e . T_LEQ e
   18  | e . T_LE e
   19  | e . T_GEQ e
   20  | e . T_GE e
   21  | e . T_OR e
   22  | e . T_AND e
   24  | e . T_EQ e
   27  | T_LET T_ID T_EQUAL e T_IN e .
   28  | e . T_WHERE T_ID T_EQUAL e
   31  | e . T_PUSH e

    T_PLUS   shift, and go to state 36
    T_MINUS  shift, and go to state 37
    T_MULT   shift, and go to state 38
    T_DIV    shift, and go to state 39
    T_LEQ    shift, and go to state 40
    T_LE     shift, and go to state 41
    T_GEQ    shift, and go to state 42
    T_GE     shift, and go to state 43
    T_EQ     shift, and go to state 44
    T_OR     shift, and go to state 45
    T_AND    shift, and go to state 46
    T_PUSH   shift, and go to state 48
    T_PATH   shift, and go to state 49

    T_WHERE  error (nonassociative)

    $default  reduce using rule 27 (e)


State 97

   11 e: T_CIRCLE '(' e ',' e ')' .

    $default  reduce using rule 11 (e)
