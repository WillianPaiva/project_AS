Terminals unused in grammar

   T_LIST


Grammar

    0 $accept: s $end

    1 s: s e FIN_EXPR
    2  | s en FIN_EXPR
    3  | s T_PRINT FIN_EXPR
    4  | /* empty */

    5 en: T_LET T_ID T_EQUAL e

    6 e: T_NUM
    7  | e T_PLUS e
    8  | e T_MINUS e
    9  | e T_DIV e
   10  | e T_MULT e
   11  | e T_LEQ e
   12  | e T_LE e
   13  | e T_GEQ e
   14  | e T_GE e
   15  | e T_OR e
   16  | e T_AND e
   17  | T_ID
   18  | e T_EQ e
   19  | T_NOT e
   20  | T_FUN T_ID arg_list
   21  | T_LET T_ID T_EQUAL e T_IN e
   22  | e T_WHERE T_ID T_EQUAL e
   23  | T_IF e T_THEN e T_ELSE e
   24  | '(' f_arg e ')'
   25  | '(' e ')'

   26 f_arg: e
   27      | f_arg e

   28 arg_list: T_ARROW e
   29         | T_ID arg_list


Terminals, with rules where they appear

$end (0) 0
'(' (40) 24 25
')' (41) 24 25
error (256)
T_NUM (258) 6
T_ID (259) 5 17 20 21 22 29
T_PRINT (260) 3
FIN_EXPR (261) 1 2 3
T_PLUS (262) 7
T_MINUS (263) 8
T_MULT (264) 10
T_DIV (265) 9
T_LEQ (266) 11
T_LE (267) 12
T_GEQ (268) 13
T_GE (269) 14
T_EQ (270) 18
T_OR (271) 15
T_AND (272) 16
T_NOT (273) 19
T_EQUAL (274) 5 21 22
T_IF (275) 23
T_ELSE (276) 23
T_THEN (277) 23
T_FUN (278) 20
T_ARROW (279) 28
T_LET (280) 5 21
T_IN (281) 21
T_WHERE (282) 22
T_LIST (283)


Nonterminals, with rules where they appear

$accept (31)
    on left: 0
s (32)
    on left: 1 2 3 4, on right: 0 1 2 3
en (33)
    on left: 5, on right: 2
e (34)
    on left: 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25,
    on right: 1 5 7 8 9 10 11 12 13 14 15 16 18 19 21 22 23 24 25 26
    27 28
f_arg (35)
    on left: 26 27, on right: 24 27
arg_list (36)
    on left: 28 29, on right: 20 29


State 0

    0 $accept: . s $end

    $default  reduce using rule 4 (s)

    s  go to state 1


State 1

    0 $accept: s . $end
    1 s: s . e FIN_EXPR
    2  | s . en FIN_EXPR
    3  | s . T_PRINT FIN_EXPR

    $end     shift, and go to state 2
    T_NUM    shift, and go to state 3
    T_ID     shift, and go to state 4
    T_PRINT  shift, and go to state 5
    T_NOT    shift, and go to state 6
    T_IF     shift, and go to state 7
    T_FUN    shift, and go to state 8
    T_LET    shift, and go to state 9
    '('      shift, and go to state 10

    en  go to state 11
    e   go to state 12


State 2

    0 $accept: s $end .

    $default  accept


State 3

    6 e: T_NUM .

    $default  reduce using rule 6 (e)


State 4

   17 e: T_ID .

    $default  reduce using rule 17 (e)


State 5

    3 s: s T_PRINT . FIN_EXPR

    FIN_EXPR  shift, and go to state 13


State 6

   19 e: T_NOT . e

    T_NUM  shift, and go to state 3
    T_ID   shift, and go to state 4
    T_NOT  shift, and go to state 6
    T_IF   shift, and go to state 7
    T_FUN  shift, and go to state 8
    T_LET  shift, and go to state 14
    '('    shift, and go to state 10

    e  go to state 15


State 7

   23 e: T_IF . e T_THEN e T_ELSE e

    T_NUM  shift, and go to state 3
    T_ID   shift, and go to state 4
    T_NOT  shift, and go to state 6
    T_IF   shift, and go to state 7
    T_FUN  shift, and go to state 8
    T_LET  shift, and go to state 14
    '('    shift, and go to state 10

    e  go to state 16


State 8

   20 e: T_FUN . T_ID arg_list

    T_ID  shift, and go to state 17


State 9

    5 en: T_LET . T_ID T_EQUAL e
   21 e: T_LET . T_ID T_EQUAL e T_IN e

    T_ID  shift, and go to state 18


State 10

   24 e: '(' . f_arg e ')'
   25  | '(' . e ')'

    T_NUM  shift, and go to state 3
    T_ID   shift, and go to state 4
    T_NOT  shift, and go to state 6
    T_IF   shift, and go to state 7
    T_FUN  shift, and go to state 8
    T_LET  shift, and go to state 14
    '('    shift, and go to state 10

    e      go to state 19
    f_arg  go to state 20


State 11

    2 s: s en . FIN_EXPR

    FIN_EXPR  shift, and go to state 21


State 12

    1 s: s e . FIN_EXPR
    7 e: e . T_PLUS e
    8  | e . T_MINUS e
    9  | e . T_DIV e
   10  | e . T_MULT e
   11  | e . T_LEQ e
   12  | e . T_LE e
   13  | e . T_GEQ e
   14  | e . T_GE e
   15  | e . T_OR e
   16  | e . T_AND e
   18  | e . T_EQ e
   22  | e . T_WHERE T_ID T_EQUAL e

    FIN_EXPR  shift, and go to state 22
    T_PLUS    shift, and go to state 23
    T_MINUS   shift, and go to state 24
    T_MULT    shift, and go to state 25
    T_DIV     shift, and go to state 26
    T_LEQ     shift, and go to state 27
    T_LE      shift, and go to state 28
    T_GEQ     shift, and go to state 29
    T_GE      shift, and go to state 30
    T_EQ      shift, and go to state 31
    T_OR      shift, and go to state 32
    T_AND     shift, and go to state 33
    T_WHERE   shift, and go to state 34


State 13

    3 s: s T_PRINT FIN_EXPR .

    $default  reduce using rule 3 (s)


State 14

   21 e: T_LET . T_ID T_EQUAL e T_IN e

    T_ID  shift, and go to state 35


State 15

    7 e: e . T_PLUS e
    8  | e . T_MINUS e
    9  | e . T_DIV e
   10  | e . T_MULT e
   11  | e . T_LEQ e
   12  | e . T_LE e
   13  | e . T_GEQ e
   14  | e . T_GE e
   15  | e . T_OR e
   16  | e . T_AND e
   18  | e . T_EQ e
   19  | T_NOT e .
   22  | e . T_WHERE T_ID T_EQUAL e

    T_PLUS   shift, and go to state 23
    T_MINUS  shift, and go to state 24
    T_MULT   shift, and go to state 25
    T_DIV    shift, and go to state 26

    $default  reduce using rule 19 (e)


State 16

    7 e: e . T_PLUS e
    8  | e . T_MINUS e
    9  | e . T_DIV e
   10  | e . T_MULT e
   11  | e . T_LEQ e
   12  | e . T_LE e
   13  | e . T_GEQ e
   14  | e . T_GE e
   15  | e . T_OR e
   16  | e . T_AND e
   18  | e . T_EQ e
   22  | e . T_WHERE T_ID T_EQUAL e
   23  | T_IF e . T_THEN e T_ELSE e

    T_PLUS   shift, and go to state 23
    T_MINUS  shift, and go to state 24
    T_MULT   shift, and go to state 25
    T_DIV    shift, and go to state 26
    T_LEQ    shift, and go to state 27
    T_LE     shift, and go to state 28
    T_GEQ    shift, and go to state 29
    T_GE     shift, and go to state 30
    T_EQ     shift, and go to state 31
    T_OR     shift, and go to state 32
    T_AND    shift, and go to state 33
    T_THEN   shift, and go to state 36
    T_WHERE  shift, and go to state 34


State 17

   20 e: T_FUN T_ID . arg_list

    T_ID     shift, and go to state 37
    T_ARROW  shift, and go to state 38

    arg_list  go to state 39


State 18

    5 en: T_LET T_ID . T_EQUAL e
   21 e: T_LET T_ID . T_EQUAL e T_IN e

    T_EQUAL  shift, and go to state 40


State 19

    7 e: e . T_PLUS e
    8  | e . T_MINUS e
    9  | e . T_DIV e
   10  | e . T_MULT e
   11  | e . T_LEQ e
   12  | e . T_LE e
   13  | e . T_GEQ e
   14  | e . T_GE e
   15  | e . T_OR e
   16  | e . T_AND e
   18  | e . T_EQ e
   22  | e . T_WHERE T_ID T_EQUAL e
   25  | '(' e . ')'
   26 f_arg: e .

    T_PLUS   shift, and go to state 23
    T_MINUS  shift, and go to state 24
    T_MULT   shift, and go to state 25
    T_DIV    shift, and go to state 26
    T_LEQ    shift, and go to state 27
    T_LE     shift, and go to state 28
    T_GEQ    shift, and go to state 29
    T_GE     shift, and go to state 30
    T_EQ     shift, and go to state 31
    T_OR     shift, and go to state 32
    T_AND    shift, and go to state 33
    T_WHERE  shift, and go to state 34
    ')'      shift, and go to state 41

    $default  reduce using rule 26 (f_arg)


State 20

   24 e: '(' f_arg . e ')'
   27 f_arg: f_arg . e

    T_NUM  shift, and go to state 3
    T_ID   shift, and go to state 4
    T_NOT  shift, and go to state 6
    T_IF   shift, and go to state 7
    T_FUN  shift, and go to state 8
    T_LET  shift, and go to state 14
    '('    shift, and go to state 10

    e  go to state 42


State 21

    2 s: s en FIN_EXPR .

    $default  reduce using rule 2 (s)


State 22

    1 s: s e FIN_EXPR .

    $default  reduce using rule 1 (s)


State 23

    7 e: e T_PLUS . e

    T_NUM  shift, and go to state 3
    T_ID   shift, and go to state 4
    T_NOT  shift, and go to state 6
    T_IF   shift, and go to state 7
    T_FUN  shift, and go to state 8
    T_LET  shift, and go to state 14
    '('    shift, and go to state 10

    e  go to state 43


State 24

    8 e: e T_MINUS . e

    T_NUM  shift, and go to state 3
    T_ID   shift, and go to state 4
    T_NOT  shift, and go to state 6
    T_IF   shift, and go to state 7
    T_FUN  shift, and go to state 8
    T_LET  shift, and go to state 14
    '('    shift, and go to state 10

    e  go to state 44


State 25

   10 e: e T_MULT . e

    T_NUM  shift, and go to state 3
    T_ID   shift, and go to state 4
    T_NOT  shift, and go to state 6
    T_IF   shift, and go to state 7
    T_FUN  shift, and go to state 8
    T_LET  shift, and go to state 14
    '('    shift, and go to state 10

    e  go to state 45


State 26

    9 e: e T_DIV . e

    T_NUM  shift, and go to state 3
    T_ID   shift, and go to state 4
    T_NOT  shift, and go to state 6
    T_IF   shift, and go to state 7
    T_FUN  shift, and go to state 8
    T_LET  shift, and go to state 14
    '('    shift, and go to state 10

    e  go to state 46


State 27

   11 e: e T_LEQ . e

    T_NUM  shift, and go to state 3
    T_ID   shift, and go to state 4
    T_NOT  shift, and go to state 6
    T_IF   shift, and go to state 7
    T_FUN  shift, and go to state 8
    T_LET  shift, and go to state 14
    '('    shift, and go to state 10

    e  go to state 47


State 28

   12 e: e T_LE . e

    T_NUM  shift, and go to state 3
    T_ID   shift, and go to state 4
    T_NOT  shift, and go to state 6
    T_IF   shift, and go to state 7
    T_FUN  shift, and go to state 8
    T_LET  shift, and go to state 14
    '('    shift, and go to state 10

    e  go to state 48


State 29

   13 e: e T_GEQ . e

    T_NUM  shift, and go to state 3
    T_ID   shift, and go to state 4
    T_NOT  shift, and go to state 6
    T_IF   shift, and go to state 7
    T_FUN  shift, and go to state 8
    T_LET  shift, and go to state 14
    '('    shift, and go to state 10

    e  go to state 49


State 30

   14 e: e T_GE . e

    T_NUM  shift, and go to state 3
    T_ID   shift, and go to state 4
    T_NOT  shift, and go to state 6
    T_IF   shift, and go to state 7
    T_FUN  shift, and go to state 8
    T_LET  shift, and go to state 14
    '('    shift, and go to state 10

    e  go to state 50


State 31

   18 e: e T_EQ . e

    T_NUM  shift, and go to state 3
    T_ID   shift, and go to state 4
    T_NOT  shift, and go to state 6
    T_IF   shift, and go to state 7
    T_FUN  shift, and go to state 8
    T_LET  shift, and go to state 14
    '('    shift, and go to state 10

    e  go to state 51


State 32

   15 e: e T_OR . e

    T_NUM  shift, and go to state 3
    T_ID   shift, and go to state 4
    T_NOT  shift, and go to state 6
    T_IF   shift, and go to state 7
    T_FUN  shift, and go to state 8
    T_LET  shift, and go to state 14
    '('    shift, and go to state 10

    e  go to state 52


State 33

   16 e: e T_AND . e

    T_NUM  shift, and go to state 3
    T_ID   shift, and go to state 4
    T_NOT  shift, and go to state 6
    T_IF   shift, and go to state 7
    T_FUN  shift, and go to state 8
    T_LET  shift, and go to state 14
    '('    shift, and go to state 10

    e  go to state 53


State 34

   22 e: e T_WHERE . T_ID T_EQUAL e

    T_ID  shift, and go to state 54


State 35

   21 e: T_LET T_ID . T_EQUAL e T_IN e

    T_EQUAL  shift, and go to state 55


State 36

   23 e: T_IF e T_THEN . e T_ELSE e

    T_NUM  shift, and go to state 3
    T_ID   shift, and go to state 4
    T_NOT  shift, and go to state 6
    T_IF   shift, and go to state 7
    T_FUN  shift, and go to state 8
    T_LET  shift, and go to state 14
    '('    shift, and go to state 10

    e  go to state 56


State 37

   29 arg_list: T_ID . arg_list

    T_ID     shift, and go to state 37
    T_ARROW  shift, and go to state 38

    arg_list  go to state 57


State 38

   28 arg_list: T_ARROW . e

    T_NUM  shift, and go to state 3
    T_ID   shift, and go to state 4
    T_NOT  shift, and go to state 6
    T_IF   shift, and go to state 7
    T_FUN  shift, and go to state 8
    T_LET  shift, and go to state 14
    '('    shift, and go to state 10

    e  go to state 58


State 39

   20 e: T_FUN T_ID arg_list .

    $default  reduce using rule 20 (e)


State 40

    5 en: T_LET T_ID T_EQUAL . e
   21 e: T_LET T_ID T_EQUAL . e T_IN e

    T_NUM  shift, and go to state 3
    T_ID   shift, and go to state 4
    T_NOT  shift, and go to state 6
    T_IF   shift, and go to state 7
    T_FUN  shift, and go to state 8
    T_LET  shift, and go to state 14
    '('    shift, and go to state 10

    e  go to state 59


State 41

   25 e: '(' e ')' .

    $default  reduce using rule 25 (e)


State 42

    7 e: e . T_PLUS e
    8  | e . T_MINUS e
    9  | e . T_DIV e
   10  | e . T_MULT e
   11  | e . T_LEQ e
   12  | e . T_LE e
   13  | e . T_GEQ e
   14  | e . T_GE e
   15  | e . T_OR e
   16  | e . T_AND e
   18  | e . T_EQ e
   22  | e . T_WHERE T_ID T_EQUAL e
   24  | '(' f_arg e . ')'
   27 f_arg: f_arg e .

    T_PLUS   shift, and go to state 23
    T_MINUS  shift, and go to state 24
    T_MULT   shift, and go to state 25
    T_DIV    shift, and go to state 26
    T_LEQ    shift, and go to state 27
    T_LE     shift, and go to state 28
    T_GEQ    shift, and go to state 29
    T_GE     shift, and go to state 30
    T_EQ     shift, and go to state 31
    T_OR     shift, and go to state 32
    T_AND    shift, and go to state 33
    T_WHERE  shift, and go to state 34
    ')'      shift, and go to state 60

    $default  reduce using rule 27 (f_arg)


State 43

    7 e: e . T_PLUS e
    7  | e T_PLUS e .
    8  | e . T_MINUS e
    9  | e . T_DIV e
   10  | e . T_MULT e
   11  | e . T_LEQ e
   12  | e . T_LE e
   13  | e . T_GEQ e
   14  | e . T_GE e
   15  | e . T_OR e
   16  | e . T_AND e
   18  | e . T_EQ e
   22  | e . T_WHERE T_ID T_EQUAL e

    T_MULT  shift, and go to state 25
    T_DIV   shift, and go to state 26

    $default  reduce using rule 7 (e)


State 44

    7 e: e . T_PLUS e
    8  | e . T_MINUS e
    8  | e T_MINUS e .
    9  | e . T_DIV e
   10  | e . T_MULT e
   11  | e . T_LEQ e
   12  | e . T_LE e
   13  | e . T_GEQ e
   14  | e . T_GE e
   15  | e . T_OR e
   16  | e . T_AND e
   18  | e . T_EQ e
   22  | e . T_WHERE T_ID T_EQUAL e

    T_MULT  shift, and go to state 25
    T_DIV   shift, and go to state 26

    $default  reduce using rule 8 (e)


State 45

    7 e: e . T_PLUS e
    8  | e . T_MINUS e
    9  | e . T_DIV e
   10  | e . T_MULT e
   10  | e T_MULT e .
   11  | e . T_LEQ e
   12  | e . T_LE e
   13  | e . T_GEQ e
   14  | e . T_GE e
   15  | e . T_OR e
   16  | e . T_AND e
   18  | e . T_EQ e
   22  | e . T_WHERE T_ID T_EQUAL e

    $default  reduce using rule 10 (e)


State 46

    7 e: e . T_PLUS e
    8  | e . T_MINUS e
    9  | e . T_DIV e
    9  | e T_DIV e .
   10  | e . T_MULT e
   11  | e . T_LEQ e
   12  | e . T_LE e
   13  | e . T_GEQ e
   14  | e . T_GE e
   15  | e . T_OR e
   16  | e . T_AND e
   18  | e . T_EQ e
   22  | e . T_WHERE T_ID T_EQUAL e

    $default  reduce using rule 9 (e)


State 47

    7 e: e . T_PLUS e
    8  | e . T_MINUS e
    9  | e . T_DIV e
   10  | e . T_MULT e
   11  | e . T_LEQ e
   11  | e T_LEQ e .
   12  | e . T_LE e
   13  | e . T_GEQ e
   14  | e . T_GE e
   15  | e . T_OR e
   16  | e . T_AND e
   18  | e . T_EQ e
   22  | e . T_WHERE T_ID T_EQUAL e

    T_PLUS   shift, and go to state 23
    T_MINUS  shift, and go to state 24
    T_MULT   shift, and go to state 25
    T_DIV    shift, and go to state 26
    T_OR     shift, and go to state 32
    T_AND    shift, and go to state 33

    $default  reduce using rule 11 (e)


State 48

    7 e: e . T_PLUS e
    8  | e . T_MINUS e
    9  | e . T_DIV e
   10  | e . T_MULT e
   11  | e . T_LEQ e
   12  | e . T_LE e
   12  | e T_LE e .
   13  | e . T_GEQ e
   14  | e . T_GE e
   15  | e . T_OR e
   16  | e . T_AND e
   18  | e . T_EQ e
   22  | e . T_WHERE T_ID T_EQUAL e

    T_PLUS   shift, and go to state 23
    T_MINUS  shift, and go to state 24
    T_MULT   shift, and go to state 25
    T_DIV    shift, and go to state 26
    T_OR     shift, and go to state 32
    T_AND    shift, and go to state 33

    $default  reduce using rule 12 (e)


State 49

    7 e: e . T_PLUS e
    8  | e . T_MINUS e
    9  | e . T_DIV e
   10  | e . T_MULT e
   11  | e . T_LEQ e
   12  | e . T_LE e
   13  | e . T_GEQ e
   13  | e T_GEQ e .
   14  | e . T_GE e
   15  | e . T_OR e
   16  | e . T_AND e
   18  | e . T_EQ e
   22  | e . T_WHERE T_ID T_EQUAL e

    T_PLUS   shift, and go to state 23
    T_MINUS  shift, and go to state 24
    T_MULT   shift, and go to state 25
    T_DIV    shift, and go to state 26
    T_OR     shift, and go to state 32
    T_AND    shift, and go to state 33

    $default  reduce using rule 13 (e)


State 50

    7 e: e . T_PLUS e
    8  | e . T_MINUS e
    9  | e . T_DIV e
   10  | e . T_MULT e
   11  | e . T_LEQ e
   12  | e . T_LE e
   13  | e . T_GEQ e
   14  | e . T_GE e
   14  | e T_GE e .
   15  | e . T_OR e
   16  | e . T_AND e
   18  | e . T_EQ e
   22  | e . T_WHERE T_ID T_EQUAL e

    T_PLUS   shift, and go to state 23
    T_MINUS  shift, and go to state 24
    T_MULT   shift, and go to state 25
    T_DIV    shift, and go to state 26
    T_OR     shift, and go to state 32
    T_AND    shift, and go to state 33

    $default  reduce using rule 14 (e)


State 51

    7 e: e . T_PLUS e
    8  | e . T_MINUS e
    9  | e . T_DIV e
   10  | e . T_MULT e
   11  | e . T_LEQ e
   12  | e . T_LE e
   13  | e . T_GEQ e
   14  | e . T_GE e
   15  | e . T_OR e
   16  | e . T_AND e
   18  | e . T_EQ e
   18  | e T_EQ e .
   22  | e . T_WHERE T_ID T_EQUAL e

    T_PLUS   shift, and go to state 23
    T_MINUS  shift, and go to state 24
    T_MULT   shift, and go to state 25
    T_DIV    shift, and go to state 26
    T_OR     shift, and go to state 32
    T_AND    shift, and go to state 33

    $default  reduce using rule 18 (e)


State 52

    7 e: e . T_PLUS e
    8  | e . T_MINUS e
    9  | e . T_DIV e
   10  | e . T_MULT e
   11  | e . T_LEQ e
   12  | e . T_LE e
   13  | e . T_GEQ e
   14  | e . T_GE e
   15  | e . T_OR e
   15  | e T_OR e .
   16  | e . T_AND e
   18  | e . T_EQ e
   22  | e . T_WHERE T_ID T_EQUAL e

    T_PLUS   shift, and go to state 23
    T_MINUS  shift, and go to state 24
    T_MULT   shift, and go to state 25
    T_DIV    shift, and go to state 26
    T_AND    shift, and go to state 33

    $default  reduce using rule 15 (e)


State 53

    7 e: e . T_PLUS e
    8  | e . T_MINUS e
    9  | e . T_DIV e
   10  | e . T_MULT e
   11  | e . T_LEQ e
   12  | e . T_LE e
   13  | e . T_GEQ e
   14  | e . T_GE e
   15  | e . T_OR e
   16  | e . T_AND e
   16  | e T_AND e .
   18  | e . T_EQ e
   22  | e . T_WHERE T_ID T_EQUAL e

    T_PLUS   shift, and go to state 23
    T_MINUS  shift, and go to state 24
    T_MULT   shift, and go to state 25
    T_DIV    shift, and go to state 26

    $default  reduce using rule 16 (e)


State 54

   22 e: e T_WHERE T_ID . T_EQUAL e

    T_EQUAL  shift, and go to state 61


State 55

   21 e: T_LET T_ID T_EQUAL . e T_IN e

    T_NUM  shift, and go to state 3
    T_ID   shift, and go to state 4
    T_NOT  shift, and go to state 6
    T_IF   shift, and go to state 7
    T_FUN  shift, and go to state 8
    T_LET  shift, and go to state 14
    '('    shift, and go to state 10

    e  go to state 62


State 56

    7 e: e . T_PLUS e
    8  | e . T_MINUS e
    9  | e . T_DIV e
   10  | e . T_MULT e
   11  | e . T_LEQ e
   12  | e . T_LE e
   13  | e . T_GEQ e
   14  | e . T_GE e
   15  | e . T_OR e
   16  | e . T_AND e
   18  | e . T_EQ e
   22  | e . T_WHERE T_ID T_EQUAL e
   23  | T_IF e T_THEN e . T_ELSE e

    T_PLUS   shift, and go to state 23
    T_MINUS  shift, and go to state 24
    T_MULT   shift, and go to state 25
    T_DIV    shift, and go to state 26
    T_LEQ    shift, and go to state 27
    T_LE     shift, and go to state 28
    T_GEQ    shift, and go to state 29
    T_GE     shift, and go to state 30
    T_EQ     shift, and go to state 31
    T_OR     shift, and go to state 32
    T_AND    shift, and go to state 33
    T_ELSE   shift, and go to state 63
    T_WHERE  shift, and go to state 34


State 57

   29 arg_list: T_ID arg_list .

    $default  reduce using rule 29 (arg_list)


State 58

    7 e: e . T_PLUS e
    8  | e . T_MINUS e
    9  | e . T_DIV e
   10  | e . T_MULT e
   11  | e . T_LEQ e
   12  | e . T_LE e
   13  | e . T_GEQ e
   14  | e . T_GE e
   15  | e . T_OR e
   16  | e . T_AND e
   18  | e . T_EQ e
   22  | e . T_WHERE T_ID T_EQUAL e
   28 arg_list: T_ARROW e .

    T_PLUS   shift, and go to state 23
    T_MINUS  shift, and go to state 24
    T_MULT   shift, and go to state 25
    T_DIV    shift, and go to state 26
    T_LEQ    shift, and go to state 27
    T_LE     shift, and go to state 28
    T_GEQ    shift, and go to state 29
    T_GE     shift, and go to state 30
    T_EQ     shift, and go to state 31
    T_OR     shift, and go to state 32
    T_AND    shift, and go to state 33

    T_WHERE  error (nonassociative)

    $default  reduce using rule 28 (arg_list)


State 59

    5 en: T_LET T_ID T_EQUAL e .
    7 e: e . T_PLUS e
    8  | e . T_MINUS e
    9  | e . T_DIV e
   10  | e . T_MULT e
   11  | e . T_LEQ e
   12  | e . T_LE e
   13  | e . T_GEQ e
   14  | e . T_GE e
   15  | e . T_OR e
   16  | e . T_AND e
   18  | e . T_EQ e
   21  | T_LET T_ID T_EQUAL e . T_IN e
   22  | e . T_WHERE T_ID T_EQUAL e

    T_PLUS   shift, and go to state 23
    T_MINUS  shift, and go to state 24
    T_MULT   shift, and go to state 25
    T_DIV    shift, and go to state 26
    T_LEQ    shift, and go to state 27
    T_LE     shift, and go to state 28
    T_GEQ    shift, and go to state 29
    T_GE     shift, and go to state 30
    T_EQ     shift, and go to state 31
    T_OR     shift, and go to state 32
    T_AND    shift, and go to state 33
    T_IN     shift, and go to state 64
    T_WHERE  shift, and go to state 34

    $default  reduce using rule 5 (en)


State 60

   24 e: '(' f_arg e ')' .

    $default  reduce using rule 24 (e)


State 61

   22 e: e T_WHERE T_ID T_EQUAL . e

    T_NUM  shift, and go to state 3
    T_ID   shift, and go to state 4
    T_NOT  shift, and go to state 6
    T_IF   shift, and go to state 7
    T_FUN  shift, and go to state 8
    T_LET  shift, and go to state 14
    '('    shift, and go to state 10

    e  go to state 65


State 62

    7 e: e . T_PLUS e
    8  | e . T_MINUS e
    9  | e . T_DIV e
   10  | e . T_MULT e
   11  | e . T_LEQ e
   12  | e . T_LE e
   13  | e . T_GEQ e
   14  | e . T_GE e
   15  | e . T_OR e
   16  | e . T_AND e
   18  | e . T_EQ e
   21  | T_LET T_ID T_EQUAL e . T_IN e
   22  | e . T_WHERE T_ID T_EQUAL e

    T_PLUS   shift, and go to state 23
    T_MINUS  shift, and go to state 24
    T_MULT   shift, and go to state 25
    T_DIV    shift, and go to state 26
    T_LEQ    shift, and go to state 27
    T_LE     shift, and go to state 28
    T_GEQ    shift, and go to state 29
    T_GE     shift, and go to state 30
    T_EQ     shift, and go to state 31
    T_OR     shift, and go to state 32
    T_AND    shift, and go to state 33
    T_IN     shift, and go to state 64
    T_WHERE  shift, and go to state 34


State 63

   23 e: T_IF e T_THEN e T_ELSE . e

    T_NUM  shift, and go to state 3
    T_ID   shift, and go to state 4
    T_NOT  shift, and go to state 6
    T_IF   shift, and go to state 7
    T_FUN  shift, and go to state 8
    T_LET  shift, and go to state 14
    '('    shift, and go to state 10

    e  go to state 66


State 64

   21 e: T_LET T_ID T_EQUAL e T_IN . e

    T_NUM  shift, and go to state 3
    T_ID   shift, and go to state 4
    T_NOT  shift, and go to state 6
    T_IF   shift, and go to state 7
    T_FUN  shift, and go to state 8
    T_LET  shift, and go to state 14
    '('    shift, and go to state 10

    e  go to state 67


State 65

    7 e: e . T_PLUS e
    8  | e . T_MINUS e
    9  | e . T_DIV e
   10  | e . T_MULT e
   11  | e . T_LEQ e
   12  | e . T_LE e
   13  | e . T_GEQ e
   14  | e . T_GE e
   15  | e . T_OR e
   16  | e . T_AND e
   18  | e . T_EQ e
   22  | e . T_WHERE T_ID T_EQUAL e
   22  | e T_WHERE T_ID T_EQUAL e .

    T_PLUS   shift, and go to state 23
    T_MINUS  shift, and go to state 24
    T_MULT   shift, and go to state 25
    T_DIV    shift, and go to state 26
    T_LEQ    shift, and go to state 27
    T_LE     shift, and go to state 28
    T_GEQ    shift, and go to state 29
    T_GE     shift, and go to state 30
    T_EQ     shift, and go to state 31
    T_OR     shift, and go to state 32
    T_AND    shift, and go to state 33

    T_WHERE  error (nonassociative)

    $default  reduce using rule 22 (e)


State 66

    7 e: e . T_PLUS e
    8  | e . T_MINUS e
    9  | e . T_DIV e
   10  | e . T_MULT e
   11  | e . T_LEQ e
   12  | e . T_LE e
   13  | e . T_GEQ e
   14  | e . T_GE e
   15  | e . T_OR e
   16  | e . T_AND e
   18  | e . T_EQ e
   22  | e . T_WHERE T_ID T_EQUAL e
   23  | T_IF e T_THEN e T_ELSE e .

    T_PLUS   shift, and go to state 23
    T_MINUS  shift, and go to state 24
    T_MULT   shift, and go to state 25
    T_DIV    shift, and go to state 26
    T_LEQ    shift, and go to state 27
    T_LE     shift, and go to state 28
    T_GEQ    shift, and go to state 29
    T_GE     shift, and go to state 30
    T_EQ     shift, and go to state 31
    T_OR     shift, and go to state 32
    T_AND    shift, and go to state 33

    T_WHERE  error (nonassociative)

    $default  reduce using rule 23 (e)


State 67

    7 e: e . T_PLUS e
    8  | e . T_MINUS e
    9  | e . T_DIV e
   10  | e . T_MULT e
   11  | e . T_LEQ e
   12  | e . T_LE e
   13  | e . T_GEQ e
   14  | e . T_GE e
   15  | e . T_OR e
   16  | e . T_AND e
   18  | e . T_EQ e
   21  | T_LET T_ID T_EQUAL e T_IN e .
   22  | e . T_WHERE T_ID T_EQUAL e

    T_PLUS   shift, and go to state 23
    T_MINUS  shift, and go to state 24
    T_MULT   shift, and go to state 25
    T_DIV    shift, and go to state 26
    T_LEQ    shift, and go to state 27
    T_LE     shift, and go to state 28
    T_GEQ    shift, and go to state 29
    T_GE     shift, and go to state 30
    T_EQ     shift, and go to state 31
    T_OR     shift, and go to state 32
    T_AND    shift, and go to state 33

    T_WHERE  error (nonassociative)

    $default  reduce using rule 21 (e)
